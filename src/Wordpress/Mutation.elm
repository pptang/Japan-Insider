-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Wordpress.Mutation exposing (CreateCategoryRequiredArguments, CreateCommentRequiredArguments, CreateMediaItemRequiredArguments, CreatePageRequiredArguments, CreatePostRequiredArguments, CreateTagRequiredArguments, CreateUserRequiredArguments, DeleteCategoryRequiredArguments, DeleteCommentRequiredArguments, DeleteMediaItemRequiredArguments, DeletePageRequiredArguments, DeletePostRequiredArguments, DeleteRevisionRequiredArguments, DeleteTagRequiredArguments, DeleteUserRequiredArguments, IncreaseCountOptionalArguments, LoginRequiredArguments, RefreshJwtAuthTokenRequiredArguments, RegisterUserRequiredArguments, ResetUserPasswordRequiredArguments, RestoreCommentRequiredArguments, SendPasswordResetEmailRequiredArguments, UpdateCategoryRequiredArguments, UpdateCommentRequiredArguments, UpdateMediaItemRequiredArguments, UpdatePageRequiredArguments, UpdatePostRequiredArguments, UpdateSettingsRequiredArguments, UpdateTagRequiredArguments, UpdateUserRequiredArguments, createCategory, createComment, createMediaItem, createPage, createPost, createTag, createUser, deleteCategory, deleteComment, deleteMediaItem, deletePage, deletePost, deleteRevision, deleteTag, deleteUser, increaseCount, login, refreshJwtAuthToken, registerUser, resetUserPassword, restoreComment, sendPasswordResetEmail, updateCategory, updateComment, updateMediaItem, updatePage, updatePost, updateSettings, updateTag, updateUser)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import Wordpress.InputObject
import Wordpress.Interface
import Wordpress.Object
import Wordpress.Scalar
import Wordpress.ScalarCodecs
import Wordpress.Union


type alias UpdateCategoryRequiredArguments =
    { input : Wordpress.InputObject.UpdateCategoryInput }


{-| The payload for the UpdateCategory mutation

  - input - Input for the UpdateCategory mutation

-}
updateCategory : UpdateCategoryRequiredArguments -> SelectionSet decodesTo Wordpress.Object.UpdateCategoryPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateCategory requiredArgs object_ =
    Object.selectionForCompositeField "updateCategory" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeUpdateCategoryInput ] object_ (identity >> Decode.nullable)


type alias UpdateTagRequiredArguments =
    { input : Wordpress.InputObject.UpdateTagInput }


{-| The payload for the UpdateTag mutation

  - input - Input for the UpdateTag mutation

-}
updateTag : UpdateTagRequiredArguments -> SelectionSet decodesTo Wordpress.Object.UpdateTagPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateTag requiredArgs object_ =
    Object.selectionForCompositeField "updateTag" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeUpdateTagInput ] object_ (identity >> Decode.nullable)


type alias CreateCategoryRequiredArguments =
    { input : Wordpress.InputObject.CreateCategoryInput }


{-| The payload for the createCategory mutation

  - input - Input for the createCategory mutation

-}
createCategory : CreateCategoryRequiredArguments -> SelectionSet decodesTo Wordpress.Object.CreateCategoryPayload -> SelectionSet (Maybe decodesTo) RootMutation
createCategory requiredArgs object_ =
    Object.selectionForCompositeField "createCategory" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeCreateCategoryInput ] object_ (identity >> Decode.nullable)


type alias CreateCommentRequiredArguments =
    { input : Wordpress.InputObject.CreateCommentInput }


{-| The payload for the createComment mutation

  - input - Input for the createComment mutation

-}
createComment : CreateCommentRequiredArguments -> SelectionSet decodesTo Wordpress.Object.CreateCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
createComment requiredArgs object_ =
    Object.selectionForCompositeField "createComment" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeCreateCommentInput ] object_ (identity >> Decode.nullable)


type alias CreateMediaItemRequiredArguments =
    { input : Wordpress.InputObject.CreateMediaItemInput }


{-| The payload for the createMediaItem mutation

  - input - Input for the createMediaItem mutation

-}
createMediaItem : CreateMediaItemRequiredArguments -> SelectionSet decodesTo Wordpress.Object.CreateMediaItemPayload -> SelectionSet (Maybe decodesTo) RootMutation
createMediaItem requiredArgs object_ =
    Object.selectionForCompositeField "createMediaItem" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeCreateMediaItemInput ] object_ (identity >> Decode.nullable)


type alias CreatePageRequiredArguments =
    { input : Wordpress.InputObject.CreatePageInput }


{-| The payload for the createPage mutation

  - input - Input for the createPage mutation

-}
createPage : CreatePageRequiredArguments -> SelectionSet decodesTo Wordpress.Object.CreatePagePayload -> SelectionSet (Maybe decodesTo) RootMutation
createPage requiredArgs object_ =
    Object.selectionForCompositeField "createPage" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeCreatePageInput ] object_ (identity >> Decode.nullable)


type alias CreatePostRequiredArguments =
    { input : Wordpress.InputObject.CreatePostInput }


{-| The payload for the createPost mutation

  - input - Input for the createPost mutation

-}
createPost : CreatePostRequiredArguments -> SelectionSet decodesTo Wordpress.Object.CreatePostPayload -> SelectionSet (Maybe decodesTo) RootMutation
createPost requiredArgs object_ =
    Object.selectionForCompositeField "createPost" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeCreatePostInput ] object_ (identity >> Decode.nullable)


type alias CreateTagRequiredArguments =
    { input : Wordpress.InputObject.CreateTagInput }


{-| The payload for the createTag mutation

  - input - Input for the createTag mutation

-}
createTag : CreateTagRequiredArguments -> SelectionSet decodesTo Wordpress.Object.CreateTagPayload -> SelectionSet (Maybe decodesTo) RootMutation
createTag requiredArgs object_ =
    Object.selectionForCompositeField "createTag" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeCreateTagInput ] object_ (identity >> Decode.nullable)


type alias CreateUserRequiredArguments =
    { input : Wordpress.InputObject.CreateUserInput }


{-| The payload for the createUser mutation

  - input - Input for the createUser mutation

-}
createUser : CreateUserRequiredArguments -> SelectionSet decodesTo Wordpress.Object.CreateUserPayload -> SelectionSet (Maybe decodesTo) RootMutation
createUser requiredArgs object_ =
    Object.selectionForCompositeField "createUser" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeCreateUserInput ] object_ (identity >> Decode.nullable)


type alias DeleteCategoryRequiredArguments =
    { input : Wordpress.InputObject.DeleteCategoryInput }


{-| The payload for the deleteCategory mutation

  - input - Input for the deleteCategory mutation

-}
deleteCategory : DeleteCategoryRequiredArguments -> SelectionSet decodesTo Wordpress.Object.DeleteCategoryPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteCategory requiredArgs object_ =
    Object.selectionForCompositeField "deleteCategory" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeDeleteCategoryInput ] object_ (identity >> Decode.nullable)


type alias DeleteCommentRequiredArguments =
    { input : Wordpress.InputObject.DeleteCommentInput }


{-| The payload for the deleteComment mutation

  - input - Input for the deleteComment mutation

-}
deleteComment : DeleteCommentRequiredArguments -> SelectionSet decodesTo Wordpress.Object.DeleteCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteComment requiredArgs object_ =
    Object.selectionForCompositeField "deleteComment" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeDeleteCommentInput ] object_ (identity >> Decode.nullable)


type alias DeleteMediaItemRequiredArguments =
    { input : Wordpress.InputObject.DeleteMediaItemInput }


{-| The payload for the deleteMediaItem mutation

  - input - Input for the deleteMediaItem mutation

-}
deleteMediaItem : DeleteMediaItemRequiredArguments -> SelectionSet decodesTo Wordpress.Object.DeleteMediaItemPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteMediaItem requiredArgs object_ =
    Object.selectionForCompositeField "deleteMediaItem" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeDeleteMediaItemInput ] object_ (identity >> Decode.nullable)


type alias DeletePageRequiredArguments =
    { input : Wordpress.InputObject.DeletePageInput }


{-| The payload for the deletePage mutation

  - input - Input for the deletePage mutation

-}
deletePage : DeletePageRequiredArguments -> SelectionSet decodesTo Wordpress.Object.DeletePagePayload -> SelectionSet (Maybe decodesTo) RootMutation
deletePage requiredArgs object_ =
    Object.selectionForCompositeField "deletePage" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeDeletePageInput ] object_ (identity >> Decode.nullable)


type alias DeletePostRequiredArguments =
    { input : Wordpress.InputObject.DeletePostInput }


{-| The payload for the deletePost mutation

  - input - Input for the deletePost mutation

-}
deletePost : DeletePostRequiredArguments -> SelectionSet decodesTo Wordpress.Object.DeletePostPayload -> SelectionSet (Maybe decodesTo) RootMutation
deletePost requiredArgs object_ =
    Object.selectionForCompositeField "deletePost" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeDeletePostInput ] object_ (identity >> Decode.nullable)


type alias DeleteRevisionRequiredArguments =
    { input : Wordpress.InputObject.DeleteRevisionInput }


{-| The payload for the deleteRevision mutation

  - input - Input for the deleteRevision mutation

-}
deleteRevision : DeleteRevisionRequiredArguments -> SelectionSet decodesTo Wordpress.Object.DeleteRevisionPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteRevision requiredArgs object_ =
    Object.selectionForCompositeField "deleteRevision" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeDeleteRevisionInput ] object_ (identity >> Decode.nullable)


type alias DeleteTagRequiredArguments =
    { input : Wordpress.InputObject.DeleteTagInput }


{-| The payload for the deleteTag mutation

  - input - Input for the deleteTag mutation

-}
deleteTag : DeleteTagRequiredArguments -> SelectionSet decodesTo Wordpress.Object.DeleteTagPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteTag requiredArgs object_ =
    Object.selectionForCompositeField "deleteTag" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeDeleteTagInput ] object_ (identity >> Decode.nullable)


type alias DeleteUserRequiredArguments =
    { input : Wordpress.InputObject.DeleteUserInput }


{-| The payload for the deleteUser mutation

  - input - Input for the deleteUser mutation

-}
deleteUser : DeleteUserRequiredArguments -> SelectionSet decodesTo Wordpress.Object.DeleteUserPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteUser requiredArgs object_ =
    Object.selectionForCompositeField "deleteUser" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeDeleteUserInput ] object_ (identity >> Decode.nullable)


type alias IncreaseCountOptionalArguments =
    { count : OptionalArgument Int }


{-|

  - count - The count to increase

-}
increaseCount : (IncreaseCountOptionalArguments -> IncreaseCountOptionalArguments) -> SelectionSet (Maybe Int) RootMutation
increaseCount fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { count = Absent }

        optionalArgs =
            [ Argument.optional "count" filledInOptionals.count Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForField "(Maybe Int)" "increaseCount" optionalArgs (Decode.int |> Decode.nullable)


type alias LoginRequiredArguments =
    { input : Wordpress.InputObject.LoginInput }


{-| -}
login : LoginRequiredArguments -> SelectionSet decodesTo Wordpress.Object.LoginPayload -> SelectionSet (Maybe decodesTo) RootMutation
login requiredArgs object_ =
    Object.selectionForCompositeField "login" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeLoginInput ] object_ (identity >> Decode.nullable)


type alias RefreshJwtAuthTokenRequiredArguments =
    { input : Wordpress.InputObject.RefreshJwtAuthTokenInput }


{-| -}
refreshJwtAuthToken : RefreshJwtAuthTokenRequiredArguments -> SelectionSet decodesTo Wordpress.Object.RefreshJwtAuthTokenPayload -> SelectionSet (Maybe decodesTo) RootMutation
refreshJwtAuthToken requiredArgs object_ =
    Object.selectionForCompositeField "refreshJwtAuthToken" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeRefreshJwtAuthTokenInput ] object_ (identity >> Decode.nullable)


type alias RegisterUserRequiredArguments =
    { input : Wordpress.InputObject.RegisterUserInput }


{-| The payload for the registerUser mutation

  - input - Input for the registerUser mutation

-}
registerUser : RegisterUserRequiredArguments -> SelectionSet decodesTo Wordpress.Object.RegisterUserPayload -> SelectionSet (Maybe decodesTo) RootMutation
registerUser requiredArgs object_ =
    Object.selectionForCompositeField "registerUser" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeRegisterUserInput ] object_ (identity >> Decode.nullable)


type alias ResetUserPasswordRequiredArguments =
    { input : Wordpress.InputObject.ResetUserPasswordInput }


{-| The payload for the resetUserPassword mutation

  - input - Input for the resetUserPassword mutation

-}
resetUserPassword : ResetUserPasswordRequiredArguments -> SelectionSet decodesTo Wordpress.Object.ResetUserPasswordPayload -> SelectionSet (Maybe decodesTo) RootMutation
resetUserPassword requiredArgs object_ =
    Object.selectionForCompositeField "resetUserPassword" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeResetUserPasswordInput ] object_ (identity >> Decode.nullable)


type alias RestoreCommentRequiredArguments =
    { input : Wordpress.InputObject.RestoreCommentInput }


{-| The payload for the restoreComment mutation

  - input - Input for the restoreComment mutation

-}
restoreComment : RestoreCommentRequiredArguments -> SelectionSet decodesTo Wordpress.Object.RestoreCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
restoreComment requiredArgs object_ =
    Object.selectionForCompositeField "restoreComment" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeRestoreCommentInput ] object_ (identity >> Decode.nullable)


type alias SendPasswordResetEmailRequiredArguments =
    { input : Wordpress.InputObject.SendPasswordResetEmailInput }


{-| The payload for the sendPasswordResetEmail mutation

  - input - Input for the sendPasswordResetEmail mutation

-}
sendPasswordResetEmail : SendPasswordResetEmailRequiredArguments -> SelectionSet decodesTo Wordpress.Object.SendPasswordResetEmailPayload -> SelectionSet (Maybe decodesTo) RootMutation
sendPasswordResetEmail requiredArgs object_ =
    Object.selectionForCompositeField "sendPasswordResetEmail" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeSendPasswordResetEmailInput ] object_ (identity >> Decode.nullable)


type alias UpdateCommentRequiredArguments =
    { input : Wordpress.InputObject.UpdateCommentInput }


{-| The payload for the updateComment mutation

  - input - Input for the updateComment mutation

-}
updateComment : UpdateCommentRequiredArguments -> SelectionSet decodesTo Wordpress.Object.UpdateCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateComment requiredArgs object_ =
    Object.selectionForCompositeField "updateComment" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeUpdateCommentInput ] object_ (identity >> Decode.nullable)


type alias UpdateMediaItemRequiredArguments =
    { input : Wordpress.InputObject.UpdateMediaItemInput }


{-| The payload for the updateMediaItem mutation

  - input - Input for the updateMediaItem mutation

-}
updateMediaItem : UpdateMediaItemRequiredArguments -> SelectionSet decodesTo Wordpress.Object.UpdateMediaItemPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateMediaItem requiredArgs object_ =
    Object.selectionForCompositeField "updateMediaItem" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeUpdateMediaItemInput ] object_ (identity >> Decode.nullable)


type alias UpdatePageRequiredArguments =
    { input : Wordpress.InputObject.UpdatePageInput }


{-| The payload for the updatePage mutation

  - input - Input for the updatePage mutation

-}
updatePage : UpdatePageRequiredArguments -> SelectionSet decodesTo Wordpress.Object.UpdatePagePayload -> SelectionSet (Maybe decodesTo) RootMutation
updatePage requiredArgs object_ =
    Object.selectionForCompositeField "updatePage" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeUpdatePageInput ] object_ (identity >> Decode.nullable)


type alias UpdatePostRequiredArguments =
    { input : Wordpress.InputObject.UpdatePostInput }


{-| The payload for the updatePost mutation

  - input - Input for the updatePost mutation

-}
updatePost : UpdatePostRequiredArguments -> SelectionSet decodesTo Wordpress.Object.UpdatePostPayload -> SelectionSet (Maybe decodesTo) RootMutation
updatePost requiredArgs object_ =
    Object.selectionForCompositeField "updatePost" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeUpdatePostInput ] object_ (identity >> Decode.nullable)


type alias UpdateSettingsRequiredArguments =
    { input : Wordpress.InputObject.UpdateSettingsInput }


{-| The payload for the updateSettings mutation

  - input - Input for the updateSettings mutation

-}
updateSettings : UpdateSettingsRequiredArguments -> SelectionSet decodesTo Wordpress.Object.UpdateSettingsPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateSettings requiredArgs object_ =
    Object.selectionForCompositeField "updateSettings" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeUpdateSettingsInput ] object_ (identity >> Decode.nullable)


type alias UpdateUserRequiredArguments =
    { input : Wordpress.InputObject.UpdateUserInput }


{-| The payload for the updateUser mutation

  - input - Input for the updateUser mutation

-}
updateUser : UpdateUserRequiredArguments -> SelectionSet decodesTo Wordpress.Object.UpdateUserPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateUser requiredArgs object_ =
    Object.selectionForCompositeField "updateUser" [ Argument.required "input" requiredArgs.input Wordpress.InputObject.encodeUpdateUserInput ] object_ (identity >> Decode.nullable)
