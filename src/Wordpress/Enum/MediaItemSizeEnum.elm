-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Wordpress.Enum.MediaItemSizeEnum exposing (MediaItemSizeEnum(..), decoder, fromString, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| The size of the media item object.

  - Large - MediaItem with the large size
  - Medium - MediaItem with the medium size
  - MediumLarge - MediaItem with the medium\_large size
  - Thumbnail - MediaItem with the thumbnail size

-}
type MediaItemSizeEnum
    = Large
    | Medium
    | MediumLarge
    | Thumbnail


list : List MediaItemSizeEnum
list =
    [ Large, Medium, MediumLarge, Thumbnail ]


decoder : Decoder MediaItemSizeEnum
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "LARGE" ->
                        Decode.succeed Large

                    "MEDIUM" ->
                        Decode.succeed Medium

                    "MEDIUM_LARGE" ->
                        Decode.succeed MediumLarge

                    "THUMBNAIL" ->
                        Decode.succeed Thumbnail

                    _ ->
                        Decode.fail ("Invalid MediaItemSizeEnum type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : MediaItemSizeEnum -> String
toString enum =
    case enum of
        Large ->
            "LARGE"

        Medium ->
            "MEDIUM"

        MediumLarge ->
            "MEDIUM_LARGE"

        Thumbnail ->
            "THUMBNAIL"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe MediaItemSizeEnum
fromString enumString =
    case enumString of
        "LARGE" ->
            Just Large

        "MEDIUM" ->
            Just Medium

        "MEDIUM_LARGE" ->
            Just MediumLarge

        "THUMBNAIL" ->
            Just Thumbnail

        _ ->
            Nothing
