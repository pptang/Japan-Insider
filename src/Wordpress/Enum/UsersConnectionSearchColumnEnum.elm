-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Wordpress.Enum.UsersConnectionSearchColumnEnum exposing (UsersConnectionSearchColumnEnum(..), decoder, fromString, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| Column used for searching for users
-}
type UsersConnectionSearchColumnEnum
    = Email
    | Id
    | Login
    | Nicename
    | Url


list : List UsersConnectionSearchColumnEnum
list =
    [ Email, Id, Login, Nicename, Url ]


decoder : Decoder UsersConnectionSearchColumnEnum
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "EMAIL" ->
                        Decode.succeed Email

                    "ID" ->
                        Decode.succeed Id

                    "LOGIN" ->
                        Decode.succeed Login

                    "NICENAME" ->
                        Decode.succeed Nicename

                    "URL" ->
                        Decode.succeed Url

                    _ ->
                        Decode.fail ("Invalid UsersConnectionSearchColumnEnum type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : UsersConnectionSearchColumnEnum -> String
toString enum =
    case enum of
        Email ->
            "EMAIL"

        Id ->
            "ID"

        Login ->
            "LOGIN"

        Nicename ->
            "NICENAME"

        Url ->
            "URL"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe UsersConnectionSearchColumnEnum
fromString enumString =
    case enumString of
        "EMAIL" ->
            Just Email

        "ID" ->
            Just Id

        "LOGIN" ->
            Just Login

        "NICENAME" ->
            Just Nicename

        "URL" ->
            Just Url

        _ ->
            Nothing
