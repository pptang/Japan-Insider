-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Wordpress.Union.PostObjectUnion exposing (Fragments, fragments, maybeFragments)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode
import Wordpress.InputObject
import Wordpress.Interface
import Wordpress.Object
import Wordpress.Scalar
import Wordpress.ScalarCodecs
import Wordpress.Union


type alias Fragments decodesTo =
    { onPost : SelectionSet decodesTo Wordpress.Object.Post
    , onPage : SelectionSet decodesTo Wordpress.Object.Page
    , onMediaItem : SelectionSet decodesTo Wordpress.Object.MediaItem
    , onRevision : SelectionSet decodesTo Wordpress.Object.Revision
    }


{-| Build up a selection for this Union by passing in a Fragments record.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo Wordpress.Union.PostObjectUnion
fragments selections =
    Object.exhuastiveFragmentSelection
        [ Object.buildFragment "Post" selections.onPost
        , Object.buildFragment "Page" selections.onPage
        , Object.buildFragment "MediaItem" selections.onMediaItem
        , Object.buildFragment "Revision" selections.onRevision
        ]


{-| Can be used to create a non-exhuastive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onPost = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onPage = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onMediaItem = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onRevision = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }
